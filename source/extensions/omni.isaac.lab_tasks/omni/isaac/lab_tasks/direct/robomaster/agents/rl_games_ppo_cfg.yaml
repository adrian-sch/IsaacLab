params:
  seed: 42

  # environment wrapper clipping
  env:
    clip_actions: 1.0
    gt_obs: False
    use_lidar: True

  algo:
    name: a2c_continuous

  model:
    name: continuous_a2c_logstd

  network:

    name: christian_net
    # separate: true
    fixed_sigma: true

    # action_limiter:
    #   begin: 0.0
    #   end: 1.0

    cnn:
      type: "impala1d"
      activation: "relu"
      min_pooling: 5
      convs:
        - filters: 24
          kernel_size: 7
          stride: 3
          padding: 0
        - filters: 16
          kernel_size: 5
          stride: 2
          padding: 0

    mlp:
      activation: "relu"
      units: [256]

    mlp_sensor:
      activation: "relu"
      units: [96]

    mlp_lidar:
      activation: "relu"
      units: [256]

  load_checkpoint: False # flag which sets whether to load the checkpoint
  load_path: '' # path to the checkpoint to load

  config:
    name: robomaster_direct
    env_name: rlgpu
    device: 'cuda:0'
    device_name: 'cuda:0'
    multi_gpu: False
    ppo: True
    mixed_precision: True
    normalize_input: False
    normalize_value: True
    value_bootstrap: True
    num_actors: -1  # configured from the script (based on num_envs)
    reward_shaper:
      scale_value: 1.0
      # scale_value: 0.6
    normalize_advantage: True
    gamma: 0.99
    tau: 0.95
    learning_rate: 1e-3
    lr_schedule: adaptive
    schedule_type: legacy
    kl_threshold: 0.01
    score_to_win: 10000
    max_epochs: 5000000
    save_best_after: 50
    save_frequency: 100
    grad_norm: 1.0
    entropy_coef: 0.005
    truncate_grads: True
    e_clip: 0.2

    # for 32 envs for testing
    # horizon_length: 16 # self.batch_size % self.minibatch_size == 0. batch_size is computed as horizon_length * num_envs
    # minibatch_size: 512

    # for 512 envs
    # horizon_length: 24 # batch_size = 12288
    # minibatch_size: 3072 # 12288 / 3072 = 4

    # for 1024 envs
    horizon_length: 24 # batch_size = 24576
    minibatch_size: 6144 # 24576 / 6144 = 4

    # for 2048 envs
    # horizon_length: 24 # batch_size = 49152
    # minibatch_size: 12288 # 49152 / 12288 = 4

    # for 4096 envs
    # horizon_length: 24 # batch_size = 98304
    # minibatch_size: 24576 # 98304 / 24576 = 4

    mini_epochs: 5
    critic_coef: 2.0
    clip_value: True
    seq_length: 4
    bounds_loss_coef: 0.0
